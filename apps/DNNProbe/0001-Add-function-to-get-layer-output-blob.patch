From bf92e87e150fd8e682079b8a5a9d2bd5512a584d Mon Sep 17 00:00:00 2001
From: Yusong Huang <yusong@deepphoton.com>
Date: Wed, 22 Aug 2018 21:20:46 -0700
Subject: [PATCH] Add function to get layer output blob.

---
 modules/dnn/include/opencv2/dnn/dnn.hpp |  2 ++
 modules/dnn/src/dnn.cpp                 | 17 +++++++++++++++++
 2 files changed, 19 insertions(+)

diff --git a/modules/dnn/include/opencv2/dnn/dnn.hpp b/modules/dnn/include/opencv2/dnn/dnn.hpp
index 7cc95ca..0cddd89 100644
--- a/modules/dnn/include/opencv2/dnn/dnn.hpp
+++ b/modules/dnn/include/opencv2/dnn/dnn.hpp
@@ -631,6 +631,8 @@ CV__DNN_EXPERIMENTAL_NS_BEGIN
          */
         CV_WRAP int64 getPerfProfile(CV_OUT std::vector<double>& timings);
 
+        CV_WRAP void getOutputBlobs(int layerId, std::vector<Mat>& blobs);
+
     private:
         struct Impl;
         Ptr<Impl> impl;
diff --git a/modules/dnn/src/dnn.cpp b/modules/dnn/src/dnn.cpp
index 994df85..b09c106 100644
--- a/modules/dnn/src/dnn.cpp
+++ b/modules/dnn/src/dnn.cpp
@@ -986,6 +986,18 @@ struct Net::Impl
         return it->second;
     }
 
+    void getOutputBlobs(int layerId, std::vector<Mat>& blobs)
+	{
+        MapIdToLayerData::iterator it = layers.find(layerId);
+
+        if (it == layers.end())
+            CV_Error(Error::StsObjectNotFound, format("Layer with requested id=%d not found", layerId));
+
+        for (int i = 0; i < it->second.outputBlobs.size(); i++) {
+        	blobs.push_back(it->second.outputBlobs[i]);
+        }
+	}
+
     LayerData& getLayerData(const String &layerName)
     {
         int id = getLayerId(layerName);
@@ -2431,6 +2443,11 @@ std::vector<Ptr<Layer> > Net::getLayerInputs(LayerId layerId)
     return inputLayers;
 }
 
+void Net::getOutputBlobs(int layerId, std::vector<Mat>& blobs)
+{
+	impl->getOutputBlobs(layerId, blobs);
+}
+
 std::vector<String> Net::getLayerNames() const
 {
     std::vector<String> res;
-- 
2.7.4

